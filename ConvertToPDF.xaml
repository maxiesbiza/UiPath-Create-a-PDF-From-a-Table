<Activity mc:Ignorable="sap sap2010" x:Class="ConvertToPDF" this:ConvertToPDF.in_PathSoffice="C:\Program Files\LibreOffice\program\soffice.exe" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_PathInputFile" Type="InArgument(x:String)" />
    <x:Property Name="in_PathOutputFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_PathSoffice" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>720,1512</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ConvertToPDF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Según un archivo excel de entrada y una carpeta de destino, convierte el archivo a pdf.&#xA;Con un Invoke Power Shell realiza la conversión, llamando al programa 'soffice.exe', del paquete ofimático LibreOffice." DisplayName="ConvertToPDF" sap:VirtualizedContainerService.HintSize="473,1447" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Argumentos" />
      <Variable x:TypeArguments="x:String" Name="ODSFile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assing - Argumentos ToODS" sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Argumentos]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Concat("--convert-to ods """, in_PathInputFile, """ --outdir """, Path.GetFullPath("Data\Temp"),"""")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - ProcessPath" sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_PathSoffice]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">C:\Program Files\LibreOffice\program\soffice.exe</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Utiliza el proceso soffice para convertir de xlsx a pdf.&#xA;Este proceso se encuentra en:&#xA;C:\Program Files\LibreOffice\program\soffice.exe&#xA;&#xA;El comando completo ejecutado en powershell es por ejemplo:&#xA;Start-Process -FilePath &quot;C:\Program Files\LibreOffice\program\soffice.exe&quot; -ArgumentList &quot;--convert-to pdf CurrentEnvironment\Data\Temp\Table_ddmm.xlsx --outdir CurrentEnvironment\Data\Temp&quot; -wait&#xA;&#xA;outdir: se escribe la dirección hasta la carpeta de destino sin el nombre del archivo." CommandText="Start-Process" DisplayName="Invoke Power Shell - Convert Ganadores to ODS" sap:VirtualizedContainerService.HintSize="431,266" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_1">
      <ui:InvokePowerShell.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="FilePath">[in_PathSoffice]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ArgumentList">[Argumentos]</InArgument>
      </ui:InvokePowerShell.Parameters>
      <ui:InvokePowerShell.PowerShellVariables>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokePowerShell.PowerShellVariables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokePowerShell>
    <Delay DisplayName="Delay 3s" Duration="00:00:03" sap:VirtualizedContainerService.HintSize="431,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
    <Sequence DisplayName="excel convert" sap:VirtualizedContainerService.HintSize="431,252" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="FileName" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(in_PathInputFile)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ODSFile]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Path.Combine(Path.GetFullPath("Data\Temp"), FileName + ".ods")]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:MultipleAssign DisplayName="Multiple Assign - Argumentos" sap:VirtualizedContainerService.HintSize="431,100" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[Argumentos]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[String.Concat("--convert-to pdf """, ODSFile,""" --outdir """, in_PathOutputFolder, """")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Utiliza el proceso soffice para convertir de xlsx a pdf.&#xA;Este proceso se encuentra en:&#xA;C:\Program Files\LibreOffice\program\soffice.exe&#xA;&#xA;El comando completo ejecutado en powershell es por ejemplo:&#xA;Start-Process -FilePath &quot;C:\Program Files\LibreOffice\program\soffice.exe&quot; -ArgumentList &quot;--convert-to pdf Data\Temp\Table_ddmm.xlsx --outdir Data\Temp&quot; -wait" CommandText="Start-Process" DisplayName="Invoke Power Shell - Convert to PDF" sap:VirtualizedContainerService.HintSize="431,221" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_2">
      <ui:InvokePowerShell.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="FilePath">[in_PathSoffice]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ArgumentList">[Argumentos]</InArgument>
      </ui:InvokePowerShell.Parameters>
      <ui:InvokePowerShell.PowerShellVariables>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokePowerShell.PowerShellVariables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokePowerShell>
    <Delay DisplayName="Delay de 3s" Duration="00:00:03" sap:VirtualizedContainerService.HintSize="431,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
  </Sequence>
</Activity>